# Main (root) config
worker_processes  auto;

events { worker_connections  1024; }

http {
  # Basic sane defaults
  include       mime.types;
  default_type  application/octet-stream;
  sendfile      on;
  keepalive_timeout  65;

  # Redirect HTTP -> HTTPS (useful if you also map 8081:80)
  server {
    listen 80;
    return 301 https://$host$request_uri;
  }

  # HTTPS/TLS 1.3 reverse proxy in front of your app on the host
  server {
    listen              443 ssl http2;
    server_name         localhost;

    ssl_certificate     /etc/ssl/fullchain.pem;
    ssl_certificate_key /etc/ssl/privkey.pem;

    # TLS 1.3 only
    ssl_protocols       TLSv1.3;
    # Suites for TLS 1.3 (ignored by TLS1.2)
    ssl_ciphersuites    TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256;

    # Security headers
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "DENY" always;
    add_header Referrer-Policy "no-referrer" always;
    add_header Content-Security-Policy "default-src 'self'; object-src 'none'; base-uri 'none'" always;

    # Proxy to your FastAPI on the host (codespaces) 127.0.0.1:8080
    # Inside the container we reach the host with this name:
    set $upstream http://host.docker.internal:8080;

    location / {
      proxy_pass $upstream;

      # pass real IP/Host
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
    }
  }
}
